# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/audit-engine/package*.json ./packages/audit-engine/

# Install dependencies
RUN npm ci --only=production && \
    npm ci --only=development

# Copy source code
COPY tsconfig.json ./
COPY apps/api ./apps/api
COPY packages/shared ./packages/shared
COPY packages/audit-engine ./packages/audit-engine
COPY prisma ./prisma

# Build packages
RUN npm run build --workspace=@seo-audit/shared && \
    npm run build --workspace=@seo-audit/audit-engine

# Generate Prisma Client
RUN npx prisma generate --schema=./prisma/schema.prisma

# Production stage
FROM node:20-alpine

WORKDIR /app

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/audit-engine/package*.json ./packages/audit-engine/

# Install production dependencies only
RUN npm ci --only=production

# Copy built files from builder
COPY --from=builder /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder /app/packages/audit-engine/dist ./packages/audit-engine/dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma

# Copy API source
COPY apps/api/src ./apps/api/src
COPY apps/api/tsconfig.json ./apps/api/

# Create uploads directory
RUN mkdir -p ./apps/api/uploads && chmod 777 ./apps/api/uploads

# Set environment
ENV NODE_ENV=production
ENV PORT=3001

# Expose port
EXPOSE 3001

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s \
  CMD curl -f http://localhost:3001/health || exit 1

# Start server
CMD ["sh", "-c", "npx prisma migrate deploy --schema=./prisma/schema.prisma && npm run start --workspace=@seo-audit/api"]

